name: Docker Image CI

on:
  push:
    branches:
      - dev
      - main
jobs:
  build:
   runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Grant execute permission for gradlew
        run: |
          gradle wrapper
          chmod +x ./gradlew

      - name: Set Sentry Auth Token
        run: echo "SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}" >> $GITHUB_ENV

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: docker buildx build --platform linux/arm64 -t ${{ secrets.DOCKER_USERNAME }}/api_monolith:latest --push .

  deploy:
    needs: build
    runs-on: self-hosted

    steps:
      ###### DEV ######
      - name: Set up SSH for DEV
        if: github.ref == 'refs/heads/dev'
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY_TEST }}

      - name: Restart container DEV
        if: github.ref == 'refs/heads/dev'
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.SSH_IP_TEST }} "cd appwrite && sudo docker compose pull && sudo docker compose up -d"

      ###### PROD ######
      - name: Set up SSH for PROD
        if: github.ref == 'refs/heads/main'
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY_PROD }}

      - name: Restart container PROD
        if: github.ref == 'refs/heads/main'
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.SSH_IP_PROD }} "cd appwrite && sudo docker compose pull && sudo docker compose up -d"
